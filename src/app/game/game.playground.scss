$moveAnimationTime: 200ms;

$newAnimationTime: 200ms;
$newAnimationDelay: 300ms;

$mergeAnimationTime: 600ms;
$mergeAnimationDelay: 250ms;

$mergeRotateAngleNew: 270deg;
$mergeRotateAngleOld: 270deg;

$mergeRotateTranslateNew: 40px;
$mergeRotateTranslateOld: 40px;

$mergePerspective: 700px;

$cellSize: 50px;
$playgroundGap: 10px;

$baseTileColor: lightgreen;
$middleTileColor: lightyellow;
$superTileColor: red;

$values: (
    1: 2, 
    2: 4, 
    3: 8, 
    4: 16, 
    5: 32, 
    6: 64, 
    7: 128, 
    8: 256, 
    9: 512, 
    10: 1028, 
    11: 2048
);

$tileColors: (

);

@keyframes show {
    to {
        opacity: 1;
    }
}

@keyframes mergeTilesOld {
    from {
        transform: 
            perspective($mergePerspective) 
            rotateX(0) 
            translateY(0);
    }
    to {
        transform: 
            perspective($mergePerspective) 
            rotateX(-1 * $mergeRotateAngleOld) 
            translateY(-1 * $mergeRotateTranslateOld);
    }
}

@keyframes mergeTilesNew {
    from {
        transform: 
            perspective($mergePerspective) 
            rotateX($mergeRotateAngleNew) 
            translateY($mergeRotateTranslateNew);
    }
    to {
        transform: 
            perspective($mergePerspective) 
            rotateX(0) 
            translateY(0px);
    }
}


.playground {
    width: 100%;
    //height: 100%;

    display: flex;
    justify-content: center;
    align-items: center;

    &__row {
        display: flex;
    }
    &__cell {
        width: $cellSize;
        height: $cellSize;
        background: lightblue;
        margin: $playgroundGap / 2;

        border-radius: 50%;
    }

    &__wrapper {
        position: relative;
        background: blue;

        padding: $playgroundGap;
    }

    &__tiles {
        position: absolute;
        top: 0; right: 0; bottom: 0; left: 0;
        outline: 3px solid;

        padding: $playgroundGap;
    }
}


.tile {
    width: $cellSize;
    height: $cellSize;
    margin: $playgroundGap / 2;

    border-radius: 50%;
    overflow: hidden;

    position: absolute;
    top: 0;
    left: 0;

    transition: transform $moveAnimationTime;

    &__inner {
        position: absolute;
        top: 0; left: 0; bottom: 0; right: 0;

        display: flex;
        justify-content: center;
        align-items: center;

        background: lightgreen;
    }

    @for $x from 1 through 4 {
        @for $y from 1 through 4 {
            &[data-row="#{$y}"][data-col="#{$x}"] {
                transform: translate(
                    ($x - 1) * ($cellSize + $playgroundGap) + $playgroundGap, 
                    ($y - 1) * ($cellSize + $playgroundGap) + $playgroundGap
                );
            }
        }
    }

    @each $index, $value in $values {
        &[data-value="#{$value}"] {
            .tile__inner, &.tile_merged:before {
                @if $index < 6 {
                    background: darken($baseTileColor, ($index - 1) * 10%);
                } @else if $index < 11 {
                    background: darken($middleTileColor, ($index - 1) * 10%);
                } @else {
                    background: $superTileColor;
                }
            }
            .tile__merged:after {
                @if $index < 3 {
                    background: $baseTileColor;
                }
                @else if $index < 6 {
                    background: darken($baseTileColor, ($index - 2) * 10%);
                } @else if $index < 11 {
                    background: darken($middleTileColor, ($index - 2) * 10%);
                } 
            }
        }
    }


    &_merged {
        opacity: 0;
        animation-name: show;
        animation-delay: $mergeAnimationDelay;
        animation-duration: 0;
        animation-fill-mode: forwards;

        perspective: $mergePerspective;
        transform-style: preserve-3d;

        .tile__inner {
            transform: rotateX($mergeRotateAngleNew) translateY($mergeRotateTranslateNew);
            animation-name: mergeTilesNew;
            animation-delay: $mergeAnimationDelay;
            animation-duration: $mergeAnimationTime;
            animation-fill-mode: forwards;
            transition: none;
            backface-visibility: hidden;
            transform-origin: bottom;
        }

        &:before {
            content: '';
            position: absolute;
            top: 0; left: 0; bottom: 0; right: 0;
        }
        
        &:after {
            content: attr(data-old-value);
            position: absolute;
            top: 0; left: 0; bottom: 0; right: 0;

            display: flex;
            justify-content: center;
            align-items: center;

            animation-name: mergeTilesOld;
            animation-delay: $mergeAnimationDelay;
            animation-duration: $mergeAnimationTime;
            animation-fill-mode: forwards;
            backface-visibility: hidden;
            transform-origin: top;
        }
    }

    &_new {
        .tile__inner {
            opacity: 0;
            animation-name: show;
            animation-delay: $newAnimationDelay;
            animation-duration: $newAnimationTime;
            animation-fill-mode: forwards;
        }
    }
}